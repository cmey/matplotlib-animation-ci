environment:
  matrix:
  - JULIA_URL: "https://julialang-s3.julialang.org/bin/winnt/x64/0.6/julia-0.6-latest-win64.exe"
    PYTHON: ""

install:
  # Install imagemagick to get ffmpeg tool.
  - choco install --timeout 600 -y imagemagick.tool
  - ps: "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12"
  # Download most recent Julia Windows binary
  - ps: (new-object net.webclient).DownloadFile(
        $env:JULIA_URL,
        "C:\projects\julia-binary.exe")
  # Run installer silently, output to C:\projects\julia
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia

build_script:
  # Need to convert from shallow to complete for Pkg.clone to work
  - IF EXIST .git\shallow (git fetch --unshallow)
  # Test if ffmpeg is installed.
  - C:\projects\julia\bin\julia -e "run(`ffmpeg -version`)"
  # Update Julia packages metadata.
  - C:\projects\julia\bin\julia -e "Pkg.update()"
  # Explicitly call Conda.add("matplotlib")
  - C:\projects\julia\bin\julia -e "ENV[\"PYTHON\"]=\"\"; Pkg.add(\"Conda\"); using Conda; Conda.update(); Conda.add(\"matplotlib\"); Pkg.add(\"PyCall\"); Pkg.build(\"PyCall\"); Pkg.add(\"PyPlot\");"
  # Precompile packages so test is not so long.
  - C:\projects\julia\bin\julia -e "using PyPlot"

test_script:
  - C:\projects\julia\bin\julia  save.jl
